package split_string

import "testing"

/*
【基准测试】
基准测试就是在一定的工作负载之下检测程序性能的一种方法
基准测试以Benchmark为前缀，需要一个*testing.B类型的参数b
基准测试必须要执行b.N次，这样的测试才有对照性，b.N的值是系统根据实际情况去调整的，从而保证测试的稳定性

默认情况下，每个基准测试至少运行1秒。如果在Benchmark函数返回时没有到1秒，则b.N的值会按1,2,5,10,20,50，…增加，并且函数再次运行
*/

// BenchmarkSplit 基准测试
func BenchmarkSplit(b *testing.B) {
	for i := 0; i < b.N; i++ {
		Split("a:b:c", ":")
	}
}

/*
在命令行执行: go test -bench=Split
结果:
goos: darwin
goarch: amd64
pkg: code.oldboyedu.com/gostudy/day09/04test_split/split_string
BenchmarkSplit-4         9997287               121 ns/op
PASS
ok      code.oldboyedu.com/gostudy/day09/04test_split/split_string      1.338s
结果注释:
BenchmarkSplit-4: 表示对Split函数进行基准测试,数字4表示GOMAXPROCS的值,这个对于并发基准测试很重要
9997287  121 ns/op 表示执行9997287次，平均每次耗时121 ns


添加 -benchmem 参数，来获得内存分配的统计数据
lichengguo@lichengguodeMacBook-Pro split_string % go test -bench=Split -benchmem
goos: darwin
goarch: amd64
pkg: code.oldboyedu.com/gostudy/day09/04test_split/split_string
BenchmarkSplit-4         4889278               240 ns/op             112 B/op          3 allocs/op
PASS
ok      code.oldboyedu.com/gostudy/day09/04test_split/split_string      1.431s
结果注释:
112 B/op 表示每次操作内存分配了112字节
3 allocs/op 则表示每次操作进行了3次内存分配


优化被测试函数以后
goos: darwinichengguodeMacBook-Pro split_string % go test -bench=Split -benchmem
goarch: amd64
pkg: code.oldboyedu.com/gostudy/day09/04test_split/split_string
BenchmarkSplit-4         9878463               122 ns/op              48 B/op          1 allocs/op
PASS
ok      code.oldboyedu.com/gostudy/day09/04test_split/split_string      1.339s
从结果可以看出:
只做了一次内存申请，并且占用的内存空间更小，执行时间更短，速度更快
*/
